<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://10.20.91.130/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.qicong.os.dao.CourseDao">

	<resultMap id="BeanResultMap" type="com.qicong.os.domain.Course" >
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name"  jdbcType="VARCHAR" />
		<result column="type" property="type"  jdbcType="INTEGER" />
		<result column="classify" property="classify"  jdbcType="VARCHAR" />
		<result column="classify_name" property="classifyName"  jdbcType="VARCHAR" />
		<result column="sub_classify" property="subClassify"  jdbcType="VARCHAR" />
		<result column="sub_classify_name" property="subClassifyName"  jdbcType="VARCHAR" />
		<result column="direction" property="direction"  jdbcType="VARCHAR" />
		<result column="username" property="username"  jdbcType="VARCHAR" />
		<result column="level" property="level"  jdbcType="INTEGER" />
		<result column="free" property="free"  jdbcType="INTEGER" />
		<result column="price" property="price"  jdbcType="DECIMAL" />
		<result column="time" property="time"  jdbcType="VARCHAR" />
		<result column="onsale" property="onsale"  jdbcType="INTEGER" />
		<result column="picture" property="picture"  jdbcType="VARCHAR" />
		<result column="brief" property="brief"  jdbcType="VARCHAR" />
		<result column="recommend" property="recommend"  jdbcType="INTEGER" />
		<result column="weight" property="weight"  jdbcType="INTEGER" />
		<result column="livetime" property="livetime"  jdbcType="VARCHAR" />
		<result column="study_count" property="studyCount"  jdbcType="INTEGER" />
		<result column="createAt" property="createAt"  jdbcType="TIMESTAMP" />
		<result column="updateAt" property="updateAt"  jdbcType="TIMESTAMP" />
	</resultMap>
	
	<sql id="All_Columns">
		name, type, classify, classify_name, sub_classify, sub_classify_name, direction, username, 
		level, free, price, time, onsale, brief, picture,
		recommend, weight, livetime, study_count, createAt, updateAt, id 
	</sql>

	<select id="queryList"  parameterType="com.qicong.os.domain.CourseQueryDto"  resultMap="BeanResultMap">
		SELECT 
		<include refid="All_Columns" />
		FROM course 
		<trim prefix="WHERE " prefixOverrides="AND |OR "> 
			<if test="type != null">
				AND type = #{type, jdbcType=INTEGER}
			</if>
			<if test="classify != null">
				AND classify = #{classify, jdbcType=INTEGER}
			</if>
			<if test="subClassify != null">
				AND sub_classify = #{subClassify, jdbcType=INTEGER}
			</if>
			<if test="direction != null">
				AND direction = #{direction, jdbcType=INTEGER}
			</if>
			<if test="username != null">
				AND username = #{username, jdbcType=INTEGER}
			</if>
			<if test="free != null">
				AND free = #{free, jdbcType=INTEGER}
			</if>
			<if test="onsale != null">
				AND onsale = #{onsale, jdbcType=INTEGER}
			</if>
			<if test="price != null">
				<![CDATA[ AND price > #{price, jdbcType=INTEGER} ]]>
			</if>
		</trim>
		<if test="sortField != null">
		ORDER BY ${sortField}  ${sortDirection}
		</if>
		<if test="start != null and end != null">
		LIMIT #{start, jdbcType=INTEGER} , #{end, jdbcType=INTEGER}
		</if>
	</select>
	
	<select id="getTotalItemsCount" parameterType="com.qicong.os.domain.CourseQueryDto" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM course
		<where> 
			<if test="type != null">
				AND type = #{type, jdbcType=INTEGER}
			</if>
			<if test="classify != null">
				AND classify = #{classify, jdbcType=INTEGER}
			</if>
			<if test="subClassify != null">
				AND sub_classify = #{subClassify, jdbcType=INTEGER}
			</if>
			<if test="onsale != null">
				AND onsale = #{onsale, jdbcType=INTEGER}
			</if>
			<if test="name != null">
				AND name like CONCAT('%',#{name},'%' ) 
			</if>
		</where>
	</select>
	
	<select id="getClassifyCourseCount" parameterType="com.qicong.os.domain.CourseQueryDto" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM course
		<where> 
			<if test="classify != null">
				AND classify = #{classify, jdbcType=INTEGER}
			</if>
			<if test="subClassify != null">
				AND sub_classify = #{subClassify, jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<select id="queryPage" resultMap="BeanResultMap">
		SELECT 
		<include refid="All_Columns" />
		FROM course
		<where> 
			<if test="param1.type != null">
				AND type = #{param1.type, jdbcType=INTEGER}
			</if>
			<if test="param1.classify != null">
				AND classify = #{param1.classify, jdbcType=INTEGER}
			</if>
			<if test="param1.subClassify != null">
				AND sub_classify = #{param1.subClassify, jdbcType=INTEGER}
			</if>
			<if test="param1.onsale != null">
				AND onsale = #{param1.onsale, jdbcType=INTEGER}
			</if>
			<if test="param1.name != null">
				AND name like CONCAT('%',#{param1.name},'%' ) 
			</if>
		</where>
		<if test="param2.sortField != null and param2.sortField != ''">
		ORDER BY ${param2.sortField}  ${param2.sortDirection}
		</if>
		LIMIT #{param2.startIndex, jdbcType=INTEGER} , #{param2.pageSize, jdbcType=INTEGER} 
	</select>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="BeanResultMap">
		SELECT 
		<include refid="All_Columns"  />
		FROM course
		WHERE id = #{id, jdbcType=INTEGER}
	</select>
	
	<insert id="create" parameterType="com.qicong.os.domain.Course" flushCache="true"  useGeneratedKeys="true" keyProperty="id"  >
		INSERT INTO course
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="name != null ">
			name,
			</if>
			<if test="type != null ">
			type,
			</if>
			<if test="classify != null ">
			classify,
			</if>
			<if test="classifyName != null ">
			classify_name,
			</if>
			<if test="subClassify != null ">
			sub_classify,
			</if>
			<if test="subClassifyName != null ">
			sub_classify_name,
			</if>
			<if test="direction != null ">
			direction,
			</if>
			<if test="username != null ">
			username,
			</if>
			<if test="level != null ">
			level,
			</if>
			<if test="free != null ">
			free,
			</if>
			<if test="price != null ">
			price,
			</if>
			<if test="time != null ">
			time,
			</if>
			<if test="onsale != null ">
			onsale,
			</if>
			<if test="brief != null ">
			brief,
			</if>
			<if test="picture != null ">
			picture,
			</if>
			<if test="recommend != null ">
			recommend,
			</if>
			<if test="weight != null ">
			weight,
			</if>
			<if test="livetime != null ">
			livetime,
			</if>
			<if test="studyCount != null ">
			study_count,
			</if>
			<if test="createAt != null ">
			createAt,
			</if>
			<if test="updateAt != null ">
			updateAt,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="name != null ">
			#{name, jdbcType=VARCHAR},
			</if>
			<if test="type != null ">
			#{type, jdbcType=INTEGER},
			</if>
			<if test="classify != null ">
			#{classify, jdbcType=VARCHAR},
			</if>
			<if test="classifyName != null ">
			#{classifyName, jdbcType=VARCHAR},
			</if>
			<if test="subClassify != null ">
			#{subClassify, jdbcType=VARCHAR},
			</if>
			<if test="subClassifyName != null ">
			#{subClassifyName, jdbcType=VARCHAR},
			</if>
			<if test="direction != null ">
			#{direction, jdbcType=VARCHAR},
			</if>
			<if test="username != null ">
			#{username, jdbcType=INTEGER},
			</if>
			<if test="level != null ">
			#{level, jdbcType=INTEGER},
			</if>
			<if test="free != null ">
			#{free, jdbcType=INTEGER},
			</if>
			<if test="price != null ">
			#{price, jdbcType=DECIMAL},
			</if>
			<if test="time != null ">
			#{time, jdbcType=VARCHAR},
			</if>
			<if test="onsale != null ">
			#{onsale, jdbcType=INTEGER},
			</if>
			<if test="brief != null ">
			#{brief, jdbcType=VARCHAR},
			</if>
			<if test="picture != null ">
			#{picture, jdbcType=VARCHAR},
			</if>
			<if test="recommend != null ">
			#{recommend, jdbcType=INTEGER},
			</if>
			<if test="weight != null ">
			#{weight, jdbcType=INTEGER},
			</if>
			<if test="livetime != null ">
			#{livetime, jdbcType=VARCHAR},
			</if>
			<if test="studyCount != null ">
			#{studyCount, jdbcType=INTEGER},
			</if>
			<if test="createAt != null ">
			#{createAt, jdbcType=TIMESTAMP},
			</if>
			<if test="updateAt != null ">
			#{updateAt, jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.qicong.os.domain.Course" flushCache="true">
		UPDATE course
		<trim prefix="SET" suffixOverrides="," >
			<if test="name != null ">
			name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="type != null ">
			type = #{type, jdbcType=INTEGER},
			</if>
			<if test="classify != null ">
			classify = #{classify, jdbcType=VARCHAR},
			</if>
			<if test="classifyName != null ">
			classify_name = #{classifyName, jdbcType=VARCHAR},
			</if>
			<if test="subClassify != null ">
			sub_classify = #{subClassify, jdbcType=VARCHAR},
			</if>
			<if test="subClassifyName != null ">
			sub_classify_name = #{subClassifyName, jdbcType=VARCHAR},
			</if>
			<if test="direction != null ">
			direction = #{direction, jdbcType=VARCHAR},
			</if>
			<if test="username != null ">
			username = #{username, jdbcType=VARCHAR},
			</if>
			<if test="level != null ">
			level = #{level, jdbcType=INTEGER},
			</if>
			<if test="free != null ">
			free = #{free, jdbcType=INTEGER},
			</if>
			<if test="price != null ">
			price = #{price, jdbcType=VARCHAR},
			</if>
			<if test="time != null ">
			time = #{time, jdbcType=VARCHAR},
			</if>
			<if test="onsale != null ">
			onsale = #{onsale, jdbcType=INTEGER},
			</if>
			<if test="brief != null ">
			brief = #{brief, jdbcType=VARCHAR},
			</if>
			<if test="picture != null ">
			picture = #{picture, jdbcType=VARCHAR},
			</if>
			<if test="recommend != null ">
			recommend = #{recommend, jdbcType=INTEGER},
			</if>
			<if test="weight != null ">
			weight = #{weight, jdbcType=INTEGER},
			</if>
			<if test="livetime != null ">
			livetime = #{livetime, jdbcType=VARCHAR},
			</if>
			<if test="studyCount != null ">
			study_count = #{studyCount, jdbcType=INTEGER},
			</if>
			<if test="updateAt != null ">
			updateAt = #{updateAt, jdbcType=TIMESTAMP},
			</if>
		</trim>
		WHERE id = #{id, jdbcType = INTEGER}
	</update>

	<delete id="delete" parameterType="com.qicong.os.domain.Course" >
		DELETE 
		FROM course
		WHERE id = #{id, jdbcType=INTEGER}
	</delete>

</mapper>
