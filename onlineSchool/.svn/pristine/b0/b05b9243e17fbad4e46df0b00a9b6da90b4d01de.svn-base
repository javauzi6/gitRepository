<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://10.20.91.130/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.qicong.os.dao.CourseCommentDao">

	<resultMap id="BeanResultMap" type="com.qicong.os.domain.CourseComment" >
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="username" property="username"  jdbcType="VARCHAR" />
		<result column="to_username" property="toUsername"  jdbcType="VARCHAR" />
		<result column="courseId" property="courseId"  jdbcType="INTEGER" />
		<result column="sectionId" property="sectionId"  jdbcType="INTEGER" />
		<result column="section_title" property="sectionTitle"  jdbcType="VARCHAR" />
		<result column="content" property="content"  jdbcType="VARCHAR" />
		<result column="refId" property="refId"  jdbcType="INTEGER" />
		<result column="ref_content" property="refContent"  jdbcType="VARCHAR" />
		<result column="type" property="type"  jdbcType="INTEGER" />
		<result column="header" property="header"  jdbcType="VARCHAR" />
		<result column="course_name" property="courseName"  jdbcType="VARCHAR" />
		<result column="createAt" property="createAt"  jdbcType="TIMESTAMP" />
		<result column="updateAt" property="updateAt"  jdbcType="TIMESTAMP" />
	</resultMap> 
	
	<sql id="All_Columns">
		username, to_username, courseId, sectionId, section_title, content, 
		refId, ref_content, type, createAt, updateAt, id 
	</sql>

	<select id="queryAll" parameterType="com.qicong.os.domain.CourseComment" resultType="com.qicong.os.domain.CourseComment">
		SELECT 
		<include refid="All_Columns" />
		FROM course_comment ORDER BY id
	</select>

	<select id="getTotalItemsCount" parameterType="com.qicong.os.domain.CourseComment" resultType="java.lang.Integer">
		SELECT COUNT(*) 
		FROM course_comment
		<where> 
			<if test="courseId != null">
				AND courseId = #{courseId, jdbcType=INTEGER}
			</if>
			<if test="sectionId != null">
				AND sectionId = #{sectionId, jdbcType=INTEGER}
			</if>
		</where> 
	</select>

	<select id="queryPage" resultMap="BeanResultMap">
		SELECT 
		c.username, c.to_username, c.courseId, c.sectionId, c.section_title, c.content, 
		c.refId, c.ref_content, c.type, u.header, c.createAt, c.updateAt, c.id
		FROM course_comment c
		LEFT JOIN auth_user u 
		ON c.username = u.username
		<where> 
			<if test="param1.courseId != null">
				AND c.courseId = #{param1.courseId, jdbcType=INTEGER}
			</if>
			<if test="param1.sectionId != null">
				AND c.sectionId = #{param1.sectionId, jdbcType=INTEGER}
			</if>
		</where> 
		ORDER BY c.id DESC
		LIMIT #{param2.startIndex, jdbcType=INTEGER} , #{param2.pageSize, jdbcType=INTEGER} 
	</select>
	
	<select id="getUserCommentCount" parameterType="com.qicong.os.domain.CourseComment" resultType="java.lang.Integer">
		SELECT COUNT(tc.id) 
		FROM course t , course_comment tc 
		WHERE t.id = tc.courseId
		AND tc.to_username = #{username}
	</select>
	
	<select id="queryUserCommentPage" resultMap="BeanResultMap">
		SELECT tc.id, tc.username, tc.courseId, tc.content, tc.section_title,
		tc.sectionId , tc.createAt, tc.ref_content, t.name as course_name
		FROM course t , course_comment tc 
		WHERE t.id = tc.courseId
		AND tc.to_username = #{param1.username}
		ORDER BY tc.id DESC
		LIMIT #{param2.startIndex, jdbcType=INTEGER} , #{param2.pageSize, jdbcType=INTEGER} 
	</select>

	<select id="getById" parameterType="java.lang.Long" resultType="com.qicong.os.domain.CourseComment">
		SELECT 
		<include refid="All_Columns"  />
		FROM course_comment
		WHERE id = #{id, jdbcType=INTEGER}
	</select>

	<insert id="create" parameterType="com.qicong.os.domain.CourseComment" flushCache="true"  useGeneratedKeys="true" keyProperty="id"  >
		INSERT INTO course_comment
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="username != null ">
			username,
			</if>
			<if test="toUsername != null ">
			to_username,
			</if>
			<if test="courseId != null ">
			courseId,
			</if>
			<if test="sectionId != null ">
			sectionId,
			</if>
			<if test="sectionTitle != null ">
			SECTION_TITLE,
			</if>
			<if test="content != null ">
			content,
			</if>
			<if test="refId != null ">
			refId,
			</if>
			<if test="refContent != null ">
			ref_content,
			</if>
			<if test="type != null ">
			type,
			</if>
			<if test="createAt != null ">
			createAt,
			</if>
			<if test="updateAt != null ">
			updateAt,
			</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")"  suffixOverrides="," >
			<if test="username != null ">
			#{username, jdbcType=VARCHAR},
			</if>
			<if test="toUsername != null ">
			#{toUsername, jdbcType=VARCHAR},
			</if>
			<if test="courseId != null ">
			#{courseId, jdbcType=INTEGER},
			</if>
			<if test="sectionId != null ">
			#{sectionId, jdbcType=INTEGER},
			</if>
			<if test="sectionTitle != null ">
			#{sectionTitle, jdbcType=VARCHAR},
			</if>
			<if test="content != null ">
			#{content, jdbcType=VARCHAR},
			</if>
			<if test="refId != null ">
			#{refId, jdbcType=INTEGER},
			</if>
			<if test="refContent != null ">
			#{refContent, jdbcType=VARCHAR},
			</if>
			<if test="type != null ">
			#{type, jdbcType=INTEGER},
			</if>
			<if test="createAt != null ">
			#{createAt, jdbcType=TIMESTAMP},
			</if>
			<if test="updateAt != null ">
			#{updateAt, jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.qicong.os.domain.CourseComment" flushCache="true">
		UPDATE course_comment
		<trim prefix="SET" suffixOverrides="," >
			<if test="username != null ">
			username = #{username, jdbcType=VARCHAR},
			</if>
			<if test="toUsername != null ">
			to_username = #{toUsername, jdbcType=VARCHAR},
			</if>
			<if test="courseId != null ">
			courseId = #{courseId, jdbcType=VARCHAR},
			</if>
			<if test="sectionId != null ">
			sectionId = #{sectionId, jdbcType=VARCHAR},
			</if>
			<if test="sectionTitle != null ">
			section_title = #{sectionTitle, jdbcType=VARCHAR},
			</if>
			<if test="content != null ">
			content = #{content, jdbcType=VARCHAR},
			</if>
			<if test="refId != null ">
			refId = #{refId, jdbcType=VARCHAR},
			</if>
			<if test="refContent != null ">
			ref_content = #{refContent, jdbcType=VARCHAR},
			</if>
			<if test="type != null ">
			type = #{type, jdbcType=INTEGER},
			</if>
			<if test="updateAt != null ">
			updateAt = #{updateAt, jdbcType=TIMESTAMP},
			</if>
		</trim>
		WHERE id = #{id, jdbcType = INTEGER}
	</update>

	<delete id="delete" parameterType="com.qicong.os.domain.CourseComment" >
		DELETE FROM course_comment
		WHERE id = #{id, jdbcType=INTEGER}
		OR refId = #{id, jdbcType=INTEGER}
	</delete>

</mapper>
