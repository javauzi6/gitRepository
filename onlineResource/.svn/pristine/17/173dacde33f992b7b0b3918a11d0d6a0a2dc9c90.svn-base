package com.qicong.os.service;

import java.util.*;

import com.qicong.os.bean.ClassifyBean;
import com.qicong.os.common.page.Pagination;
import com.qicong.os.common.util.BeanUtil;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import com.qicong.os.domain.Classify;
import com.qicong.os.service.ClassifyService;
import com.qicong.os.dao.ClassifyDao;


@Service
public class ClassifyService extends AbstractService<Classify>{

	@Autowired
	private ClassifyDao entityDao;

	public Classify getById(Long id){
		return entityDao.getById(id);
	}

	public Map<String, ClassifyBean> queryAllClassifyMap(){
		List<Classify> list = entityDao.queryAll(new Classify());
		Map<String, ClassifyBean> map = new LinkedHashMap<String,ClassifyBean>();
		Iterator<Classify> it = list.iterator();
		while(it.hasNext()){
			Classify c = it.next();
			if("0".equals(c.getParentCode())){
				ClassifyBean bean = new ClassifyBean();
				BeanUtils.copyProperties(c,bean);
				map.put(bean.getCode(), bean);
			}else{
				if(null != map.get(c.getParentCode())){
					ClassifyBean parentBean = map.get(c.getParentCode());
					parentBean.getSubClassifyList().add(c);//添加二级分类到对应的一级分类下
				}
			}
		}
		return map;
	}

	public List<Classify> queryAll(Classify queryEntity){
		return entityDao.queryAll(queryEntity);
	}

	public Pagination<Classify> queryPage(Classify queryEntity ,Pagination<Classify> page){
		Integer itemsTotalCount = entityDao.getTotalItemsCount(queryEntity);
		List<Classify> items = entityDao.queryPage(queryEntity,page);
		page.setItemsTotalCount(itemsTotalCount);
		page.setItems(items);
		return page;
	}

	public void create(Classify entity){
		entity.setCreateAt(new Date());
		entityDao.create(entity);
	}

	public void update(Classify entity){
		entityDao.update(entity);
	}

	public void delete(Classify entity){
		entityDao.delete(entity);
	}



}

